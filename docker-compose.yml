version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: shanmukha-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: shanmukha-generators
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - shanmukha-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: shanmukha-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - shanmukha-network

  # Backend Services
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shanmukha-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/shanmukha-generators?authSource=admin
      REDIS_URL: redis://redis:6379
      ADMIN_PASSWORD: admin123
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      MESSAGE_QUEUE_NAME: whatsapp_messages
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - shanmukha-network

  # Parser Service
  parser:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shanmukha-parser
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/shanmukha-generators?authSource=admin
      REDIS_URL: redis://redis:6379
      MESSAGE_QUEUE_NAME: whatsapp_messages
    depends_on:
      - mongodb
      - redis
    command: ["node", "services/parser-service.js"]
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - shanmukha-network

  # Frontend (Next.js)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shanmukha-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:3000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/shanmukha-generators?authSource=admin
      ADMIN_PASSWORD: admin123
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
    depends_on:
      - mongodb
      - backend
    networks:
      - shanmukha-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: shanmukha-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - shanmukha-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  shanmukha-network:
    driver: bridge
